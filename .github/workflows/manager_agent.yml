name: ManagerAgent

on:
  issues:
    types: [opened, reopened, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  manage:
    if: github.event.issue.state == 'open'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # ───── 1. Build prompt ─────
      - name: Build prompt
        run: |
          printf "Repository: %s\nIssue #%s – %s\n\n%s\n" \
            "${{ github.repository }}" \
            "${{ github.event.issue.number }}" \
            "${{ github.event.issue.title }}" \
            "${{ github.event.issue.body }}" > prompt.txt

      # ───── 2. Install OpenAI client ─────
      - name: Install OpenAI client
        run: python -m pip install --quiet openai==0.28.1

      # ───── 3. Call OpenAI and create files ─────
      - name: Generate files with OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python - <<'PY'
          import json, os, pathlib, openai, sys
          openai.api_key = os.environ["OPENAI_API_KEY"]
          prompt = pathlib.Path("prompt.txt").read_text()

          rsp = openai.ChatCompletion.create(
              model="gpt-4o-mini",
              response_format={"type":"json_object"},
              messages=[
                {"role":"system","content":(
                 "Return ONLY valid JSON: an array of objects "
                 "[{\"path\":\"file\",\"content\":\"...\"}]. No markdown."
                )},
                {"role":"user","content":prompt}
              ],
              max_tokens=1500
          )
          files = json.loads(rsp.choices[0].message.content)
          for f in files:
              p = pathlib.Path(f["path"])
              p.parent.mkdir(parents=True, exist_ok=True)
              p.write_text(f["content"])
          PY

      # ───── 4. Commit & push branch ─────
      - name: Commit & push branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BR="agent/${{ github.event.issue.number }}-${{ github.run_id }}"
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git checkout -b "$BR"
          git add .
          git commit -m "Agent output for #${{ github.event.issue.number }}"
          git push -u origin "$BR"

      # ───── 5. Open pull request ─────
      - name: Open pull request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Agent PR for #${{ github.event.issue.number }}" \
            --body "Automated changes generated by ManagerAgent." \
            --head "$BR" --base main
