name: ManagerAgent

on:
  issues:
    types: [opened, reopened, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  manage:
    if: github.event.issue.state == 'open'
    runs-on: ubuntu-latest

    steps:
      # 0. Check out the repo
      - uses: actions/checkout@v4

      # 1. Build a prompt out of the issue
      - name: Build prompt
        run: |
          cat <<EOF > prompt.txt
          Repository: ${{ github.repository }}
          Issue #${{ github.event.issue.number }} – ${{ github.event.issue.title }}

          ${{ github.event.issue.body }}
          EOF

      # 2. Install OpenAI client (compatible 0.x version)
      - name: Install OpenAI client
        run: python -m pip install --quiet openai==0.28.1

      # 3. Call OpenAI and write files
      - name: Generate files with OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python - <<'PY'
          import os, json, pathlib, openai, sys
          openai.api_key = os.environ["OPENAI_API_KEY"]

          prompt = pathlib.Path("prompt.txt").read_text()

          response = openai.ChatCompletion.create(
              model="gpt-4o-mini",
              messages=[
                {"role":"system","content":(
                 "You are an autonomous coding agent. "
                 "Respond ONLY with valid JSON: an array of objects "
                 "[{\"path\":\"file\",\"content\":\"...\"}]. "
                 "No markdown, no prose."
                )},
                {"role":"user","content":prompt}
              ],
              max_tokens=1500
          )

          # Parse response – accept single object or array
          data = json.loads(response.choices[0].message.content)
          files = data if isinstance(data, list) else [data]

          for f in files:
              p = pathlib.Path(f["path"])
              p.parent.mkdir(parents=True, exist_ok=True)
              p.write_text(f["content"])
          PY

      # 4. Commit the generated files and push a branch
      - name: Commit & push branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BR="agent/${{ github.event.issue.number }}-${{ github.run_id }}"
          git checkout -b "$BR"
           # ── add identity ──
          git config --global user.name  "Mercurius-AI-bot"
          git config --global user.email "bot@localhost"
          git add .
          git commit -m "Agent output for #${{ github.event.issue.number }}"
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git push -u origin "$BR"

      # 5. Open a pull request back to main
      - name: Open pull request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --head "$BR" \
            --base main \
            --title "Agent PR for #${{ github.event.issue.number }}" \
            --body  "Automated changes generated by ManagerAgent."
