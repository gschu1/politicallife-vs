name: ManagerAgent
on:
  issues:
    types: [opened, reopened, edited]

permissions:
  contents: write          # allow branch pushes
  pull-requests: write     # allow opening PRs

jobs:
  manage:
    if: github.event.issue.state == 'open'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build the prompt from issue
        id: prompt
        run: |
          echo "PROMPT<<EOF" >> $GITHUB_ENV
          echo "Repository: ${{ github.repository }}" >> $GITHUB_ENV
          echo "Issue title: ${{ github.event.issue.title }}" >> $GITHUB_ENV
          echo "Issue body:\n${{ github.event.issue.body }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Call OpenAI to generate file list
        id: ai
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python - <<'PY'
          import os, json, pathlib, openai, textwrap, subprocess, sys
          openai.api_key = os.environ['OPENAI_API_KEY']
          prompt = open(os.environ['GITHUB_ENV']).read().split("PROMPT<<EOF\n")[-1]
          completion = openai.ChatCompletion.create(
              model="gpt-4o-mini",
              messages=[
                 {"role":"system","content":"You are an agent that responds ONLY with valid JSON: an array of objects {path,content}. Do not explain."},
                 {"role":"user","content":prompt}
              ],
              max_tokens=1500
          )
          files = json.loads(completion.choices[0].message.content)
          for f in files:
              p = pathlib.Path(f["path"])
              p.parent.mkdir(parents=True, exist_ok=True)
              p.write_text(f["content"])
          PY

      - name: Commit & push branch
        run: |
          BRANCH="agent/${{ github.event.issue.number }}-${{ github.run_id }}"
          git checkout -b "$BRANCH"
          git add .
          git commit -m "Agent output for #${{ github.event.issue.number }}"
          git push -u origin "$BRANCH"

      - name: Open pull request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Agent PR for #${{ github.event.issue.number }}" \
            --body "Automated changes generated by ManagerAgent." \
            --base main \
            --head "$BRANCH"
